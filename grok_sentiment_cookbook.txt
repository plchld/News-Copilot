What‚Äôs cool here? Beyond the final sentiment result, we can peek at Grok's reasoning tokens, think of this as Grok's thought process that it went through before coming up with its final sentiment score. This can be very valuable when you're looking to debug or edit your prompt; seeing which paths or choices the model is making means you can make more targeted prompt modifications to achieve your desired behavior.

In the case below, we can see that Grok is actually computing the final score by means of a weighted average of the individual posts, which is an interesting insight.

python


print(reasoning_tokens)
output


I'm analyzing these four tweets to determine the overall sentiment towards Bitcoin (BTC). I'll look at the content, author's follower count, and whether the author is a prominent figure in the crypto or finance industry.

First tweet (ID: 1906531882981790069): "A top trader by PnL on Drift just went long $27.25K of $BTC at $81,808.42"

- Content: This tweet reports a top trader going long on BTC, which is a bullish signal.
- Author: "Whale Watch Perps" with 11,801 followers. Not a huge following, but still significant.
- Prominence: Not a well-known figure in the crypto space, but the account is verified, which adds some credibility.
- Influence: The tweet itself is neutral in tone, just reporting a fact, but the action described (going long) is bullish.

Second tweet (ID: 1906531896235786740): "Á±≥ÂõΩÊîøÂ∫ú„Åå100‰∏á„Éì„ÉÉ„Éà„Ç≥„Ç§„É≥Ë≥ºÂÖ•„ÇíË®àÁîª‰∏≠üî•\n„Éª„Éû„Ç§„Ç±„É´„Éª„Çª„Ç§„É©„ÉºÊ∞è„ÅåËøΩÂä†210ÂÑÑ„Éâ„É´ÂàÜ„ÅÆBTCË≥ºÂÖ•üíº\n„Éª$MARA„Åå20ÂÑÑ„Éâ„É´Ë™øÈÅî„ÅóBTCË≤∑„ÅÑÂ¢ó„Åó„Å∏üí∏\n„Åì„Çå„Å†„Åë„ÅÆË≤∑„ÅÑÂúß„ÅåÈõÜ„Åæ„Çã‰∏≠„ÄÅÂº±Ê∞óÊùêÊñô„ÅØ„Å©„Åì„Å´„ÅÇ„Çã‚ÅâÔ∏è\n\n#„Éì„ÉÉ„Éà„Ç≥„Ç§„É≥ #ÊöóÂè∑Ë≥áÁî£ #Á±≥ÂõΩÊîøÂ∫ú #„Éû„Ç§„Ç±„É´„Çª„Ç§„É©„Éº #MARA https://t.co/VhsRlzWp5O"

- Content: This tweet is in Japanese and translates to: "The US government is planning to purchase 1 million Bitcoins üî•\n- Michael Saylor is purchasing an additional $2.1 billion worth of BTC üíº\n- MARA has raised $2 billion and is increasing its BTC purchases üí∏\nWith this much buying pressure, where are the bearish factors?‚ÅâÔ∏è\n\n#Bitcoin #Cryptocurrency #USGovernment #MichaelSaylor #MARA"
- Author: "„Ç®„ÉÉ„ÇØ„Çπ„Ç¶„Ç£„É≥„É™„Çµ„Éº„ÉÅ „ÄåÂ∏ÇÂ†¥Â§âÂãï„ÇíÂÖàË™≠„Åø„ÄÅ„Éá„Ç∏„Çø„É´Ë≥áÁî£Êà¶Áï•„ÅÆÊñ∞Âü∫Ê∫ñ„ÇíÂ≠¶„Å∂„Äç" (Xwin Research) with 1,337 followers. A relatively small following.
- Prominence: Not a well-known figure or organization in the crypto space.
- Influence: The tweet is strongly bullish, mentioning large purchases by the US government, Michael Saylor, and MARA. However, the small following limits its impact.

Third tweet (ID: 1906531902086914480): "Top 3 Bullish Sentiment Cryptos: CROWD\n\n üü© $NUTZ $BULL $SC\n\nTop 3 Bullish Cryptos: MP | #SmartMoney\n\n üü© $XRP $ETH $BTC\n    \nCheck out sentiment and other crypto stats at https://t.co/HQDyBNuzek\n\n#Crypto #Marketprophit"

- Content: This tweet lists BTC among the top 3 bullish cryptos, which is a positive sentiment.
- Author: "Market Prophit" with 98,886 followers. A significant following.
- Prominence: Market Prophit is a known entity in the crypto space, providing market insights.
- Influence: The tweet is bullish towards BTC, and the large following amplifies its impact.

Fourth tweet (ID: 1906531965937050090): "$LADYS gears up for a rally, supported by $BABYDOGE and $MEW. Rising volume fuels confidence, but Bitcoin dominance remains a decisive factor. Monitoring $BTC will determine whether $LADYS capitalizes on momentum or faces resistance. https://t.co/JYI7L6SeQm"

- Content: This tweet mentions BTC as a decisive factor for another crypto's rally, implying its importance but not directly expressing sentiment towards BTC.
- Author: "Decilizer" with 5,514 followers. A moderate following.
- Prominence: Not a well-known figure in the crypto space.
- Influence: The tweet is neutral towards BTC, focusing on another crypto but acknowledging BTC's dominance.

Now, I'll weigh each tweet's influence by combining the sentiment expressed in the content with the author's reach and credibility.

First tweet: Bullish sentiment, moderate reach, verified account. Influence: Moderate

Second tweet: Strongly bullish sentiment, small reach. Influence: Low

Third tweet: Bullish sentiment, large reach, known entity. Influence: High

Fourth tweet: Neutral sentiment, moderate reach. Influence: Low

I'll assign sentiment scores to each tweet:

First tweet: 0.5 (bullish action reported, but neutral tone)

Second tweet: 0.8 (strongly bullish content)

Third tweet: 0.7 (bullish sentiment, large reach)

Fourth tweet: 0.0 (neutral sentiment)

Now, I'll calculate the final sentiment score by averaging the weighted sentiments. Since the third tweet has the highest influence, I'll give it more weight in the calculation.

Weighted average: (0.5 * 1) + (0.8 * 0.5) + (0.7 * 2) + (0.0 * 0.5) / (1 + 0.5 + 2 + 0.5) = (0.5 + 0.4 + 1.4 + 0.0) / 4.5 = 2.3 / 4.5 ‚âà 0.51

Rounding to one decimal place, the final sentiment score is 0.5.
Piecing it all Together
This is where it all comes together‚Äîstream, filter, and score in real time. Run the cell below to watch posts flow in, get classified by 
grok-3-fast
, and see the sentiment update live with 
grok-3-mini
 all in real-time.

python


from IPython.display import clear_output

class UpdatedXStream(AsyncStreamingClient):
    def __init__(self, x_api_key: str, x_api_secret: str, grok_client: GrokSentimentAnalyzer):
        auth = OAuth2AppHandler(x_api_key, x_api_secret)
        super().__init__(bearer_token=auth._bearer_token)
        self.grok_client = grok_client
        self.high_quality_tweets: list[Post] = []
        self.current_sentiment = ""
        self.processed_tweets = 0
        self.received_posts: dict[int, Post] = {}
        self.tweet_batch: list[Post] = []

    async def on_response(self, response: StreamResponse):
        post = response.data
        includes = response.includes
        users = includes.get("users", [])
        user_lookup = {user.id: user for user in users}
        post_author = user_lookup.get(post.author_id)
        if post_author is None:
            raise ValueError(f"Author not found for post {post.id}")

        author = Author(
            id=post_author.id,
            name=post_author.name,
            username=post_author.username,
            followers_count=post_author.public_metrics["followers_count"],
            following_count=post_author.public_metrics["following_count"],
            post_count=post_author.public_metrics["tweet_count"],
            listed_count=post_author.public_metrics["listed_count"],
            like_count=post_author.public_metrics["like_count"],
            media_count=post_author.public_metrics["media_count"],
            verified=post_author.verified,
        )

        post_object = Post(
            id=post.id,
            text=post.text,
            author_id=post.author_id,
            created_at=post.created_at,
            author=author,
            matching_rule=response.matching_rules[0],
        )

        if post_object.matching_rule.tag == GENERAL_BTC_RULE["tag"]:
            
            self.processed_tweets += 1
            # Clear previous output and display new two-line status
            clear_output(wait=True)
            print(f"Processed {self.processed_tweets} tweets")
            print(f"High Quality Candidates: {len(self.high_quality_tweets)}")
            print(f"Latest Tweet: {post_object.text}")
            print(f"Current Sentiment: {self.current_sentiment}")
            self.received_posts[post_object.id] = post
            self.tweet_batch.append(post_object)
            if len(self.tweet_batch) == 5:
                filtered_tweet_ids = await self.grok_client.classify_tweets(self.tweet_batch, CLASSIFICATION_PROMPT)
                self.high_quality_tweets.extend([self.received_posts[tweet_id] for tweet_id in filtered_tweet_ids.IDs])
                self.tweet_batch = []
            if len(self.high_quality_tweets) > 3:
                self.current_sentiment = await self.grok_client.calculate_sentiment(self.high_quality_tweets, SENTIMENT_PROMPT)

python


stream = UpdatedXStream(x_api_key, x_api_secret, grok_client)

await asyncio.wait_for(
    stream.filter(
        expansions=["author_id"],
        tweet_fields=["created_at", "author_id", "text"],
        user_fields=["name", "username", "verified", "public_metrics"],
    ),
    timeout=60,
)
output


Processed 12 tweets
High Quality Candidates: 5
Latest Tweet: üö® SCAM ALERT!

#Dexozer is restricting access to user funds! ‚ùåIf you‚Äôve been affected,DM me now for recovery assistance! #Cryppeak
#ZYPBIT
#Fobdex
#Sixzt
#Ultimaprime #finance #cryptorecovery #cryptoscam #cryptohelp #Scam #XRP #Scammed #Scamalert #BTC https://t.co/R7b4LRLrMq
Current Sentiment: ("BTC Sentiment: -0.1  \nReasoning: The overall sentiment toward Bitcoin (BTC) is slightly bearish, driven by a mix of negative and positive signals. The most influential bearish factor is the Whale Alert tweet, which reports a large whale shorting BTC with high leverage, indicating significant pessimism from a credible source. This is reinforced by a negative tweet comparing BTC unfavorably to the S&P 500, though from a less influential user. On the bullish side, Michael Saylor's mention of MicroStrategy potentially buying more BTC carries strong weight due to his prominence in the crypto space, signaling confidence. However, a bearish price prediction from a less influential user and a neutral/slightly positive tweet about short-term BTC trading from another user with moderate influence do not offset the negative momentum. The weighted average of these sentiments results in a slightly bearish score of -0.1.  \n\nKey tweets:  \n- ID: 1906533644686008357 (Whale Alert reports a whale shorting BTC with high leverage, a credible and bearish signal with significant influence)  \n- ID: 1906533664516690315 (Michael Saylor's mention of MicroStrategy potentially buying more BTC, a bullish signal from a highly influential figure)  \n- ID: 1906533734863790322 (A neutral/slightly positive tweet about preferring to trade BTC short-term, included as a minor key tweet due to moderate influence)", 'Alright, let\'s break this down. I need to analyze these tweets to determine the sentiment towards Bitcoin. The first tweet is about a whale shorting BTC with high leverage. That\'s bearish, right? It indicates someone with a lot of money is betting against Bitcoin\'s price going up. The second tweet is clearly negative, comparing Bitcoin\'s performance unfavorably to the S&P 500 and using strong language. That\'s definitely bearish. The third tweet is about Michael Saylor suggesting MicroStrategy might buy more Bitcoin. That\'s positive, as it shows confidence in Bitcoin\'s value. The fourth tweet is a prediction of Bitcoin\'s price decreasing, which is bearish. The last tweet is in Chinese, but it seems to be about preferring to trade Bitcoin short-term rather than other cryptocurrencies, which might be neutral or slightly positive for Bitcoin, as it indicates some interest in trading it.\n\nNow, I need to consider the authors\' influence. The first tweet is from "Whale Alert," which is a well-known account in the crypto space with a large following. That gives it more weight. The second tweet is from an individual user, and without knowing their follower count, I\'ll assume they have less influence. The third tweet is about Michael Saylor, who is a prominent figure in the crypto world, so that carries significant weight. The fourth tweet is from another individual user, again with unknown influence. The last tweet is also from an individual user, and without context, I\'ll assume moderate influence.\n\nI should also consider the credibility of the sources. Whale Alert is a reputable source for tracking large transactions, so their tweet is credible. Michael Saylor is a well-known advocate for Bitcoin, so his statements carry weight. The other tweets are from individual users, so their credibility is less certain.\n\nNow, I need to weigh these sentiments. The first tweet is bearish and from a credible source, so it should have a significant negative impact. The second tweet is also bearish but from a less influential source, so it should have a smaller negative impact. The third tweet is bullish and from a highly influential source, so it should have a significant positive impact. The fourth tweet is bearish but from a less influential source, so it should have a smaller negative impact. The last tweet is neutral or slightly positive but from a less influential source, so it should have a minimal impact.\n\nLet\'s assign some weights. For the first tweet, I\'ll give it a weight of -0.5. For the second tweet, -0.2. For the third tweet, +0.5. For the fourth tweet, -0.2. For the last tweet, +0.1.\n\nNow, I need to calculate the average of these weights. Adding them up: -0.5 + (-0.2) + 0.5 + (-0.2) + 0.1 = -0.3. Dividing by 5 tweets: -0.3 / 5 = -0.06.\n\nRounding to one decimal place, the sentiment score is -0.1.\n\nI think that\'s a fair assessment. The negative sentiments from the whale shorting and the negative prediction outweigh the positive sentiment from Michael Saylor\'s statement, but the overall sentiment is still slightly negative.\n\nNow, I need to identify the key tweets. The first tweet from Whale Alert is key because it\'s from a credible source and indicates a significant bearish move. The third tweet about Michael Saylor is key because it\'s from a highly influential figure and shows confidence in Bitcoin. The second and fourth tweets are less influential, so I\'ll exclude them from the key tweets list. The last tweet is also less influential, but it does show some interest in Bitcoin, so I\'ll include it as a minor key tweet.\n\nI think I\'ve got it. Let\'s put it all together.')
Conclusion
We‚Äôve built a tool that pulls Bitcoin posts from X‚Äôs Filtered Stream API, filters noise with 
grok-3-fast
, and scores sentiment in real time with 
grok-3-mini
's reasoning. It‚Äôs a lean, composable system‚Äîeach piece (streaming, filtering, scoring) slots together to deliver live market insights.

Here‚Äôs what we‚Äôve learned:

A modular setup can often be favorable to a monolith, swap models or tune parts without breaking the whole.
Match tasks to model strengths, 
grok-3-fast
‚Äôs speed for filtering and 
grok-3-mini
‚Äôs reasoning for sentiment.
Prompts are flexible‚Äîtweak them in plain English to shift focus and adjust behavior according to your needs.
LLMs like Grok thrive here: multilingual, adaptable, and quick to iterate.
Want to push it further? For high-quality tweets with links or media, let Grok dig into the content‚Äîsummarize articles or gauge visual sentiment using its image understanding capabilities. Or go dynamic: have Grok craft stream rules on the fly based on real-world events (e.g., ‚ÄúBTC crash‚Äù after a dip). Experiment, tweak, and see where it takes you.